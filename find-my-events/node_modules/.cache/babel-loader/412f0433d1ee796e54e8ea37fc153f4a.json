{"ast":null,"code":"import { GET_EVENTS, GET_EVENT, ADD_EVENT, UPDATE_EVENT, DELETE_EVENT } from '../actions/types';\nconst initialState = {\n  events: [],\n  event: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_EVENTS:\n      return { ...state,\n        events: action.payload\n      };\n\n    case GET_EVENT:\n      return { ...state,\n        event: action.payload\n      };\n\n    case ADD_EVENT:\n      return { ...state,\n        events: [action.payload, ...state.events]\n      };\n\n    case UPDATE_EVENT:\n      return { ...state,\n        events: state.events.map(event => event.id === action.payload.id ? event = action.payload : event)\n      };\n\n    case DELETE_EVENT:\n      return { ...state,\n        events: state.events.filter(event => event.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/ib_developer/Desktop/chandu_project/event-finder/find-my-events/src/reducers/eventReducer.js"],"names":["GET_EVENTS","GET_EVENT","ADD_EVENT","UPDATE_EVENT","DELETE_EVENT","initialState","events","event","state","action","type","payload","map","id","filter"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,YAA3C,EAAyDC,YAAzD,QAA6E,kBAA7E;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,MAAM,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,MAA1B;AAFH,OAAP;;AAIF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,GAAb,CAAiBL,KAAK,IAAIA,KAAK,CAACM,EAAN,KAAaJ,MAAM,CAACE,OAAP,CAAeE,EAA5B,GAAkCN,KAAK,GAAGE,MAAM,CAACE,OAAjD,GAA2DJ,KAArF;AAFH,OAAP;;AAIF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaQ,MAAb,CAAoBP,KAAK,IAAIA,KAAK,CAACM,EAAN,KAAaJ,MAAM,CAACE,OAAjD;AAFH,OAAP;;AAIF;AACE,aAAOH,KAAP;AA3BJ;AA6BD","sourcesContent":["import { GET_EVENTS, GET_EVENT, ADD_EVENT, UPDATE_EVENT, DELETE_EVENT } from '../actions/types';\n\nconst initialState = {\n  events: [],\n  event: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_EVENTS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case GET_EVENT:\n      return {\n        ...state,\n        event: action.payload\n      }\n    case ADD_EVENT:\n      return {\n        ...state,\n        events: [action.payload, ...state.events]\n      }\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        events: state.events.map(event => event.id === action.payload.id ? (event = action.payload): event)\n      }\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: state.events.filter(event => event.id !== action.payload)\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}